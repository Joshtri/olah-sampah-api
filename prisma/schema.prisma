// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Pengguna {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  nama        String
  email       String   @unique
  kataSandi   String
  peran       String   // Contoh: "admin", "staf"
  dibuatPada  DateTime @default(now())
  diperbaruiPada DateTime @updatedAt
}

model Anggota {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  nama        String
  email       String     @unique // Email untuk akun anggota
  kataSandi   String     // Kata sandi untuk login
  noTelepon   String
  alamat      String
  transaksi   Transaksi[] // Relasi ke Transaksi
  dibuatPada  DateTime   @default(now())
  diperbaruiPada DateTime @updatedAt
}

model KategoriSampah {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  nama        String
  deskripsi   String?
  itemSampah  ItemSampah[] // Relasi ke ItemSampah
}

model ItemSampah {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  nama            String
  hargaPerKg      Float           // Harga per kg
  kategoriSampah  KategoriSampah? @relation(fields: [kategoriSampahId], references: [id])
  kategoriSampahId String?        @db.ObjectId // ID relasi ke KategoriSampah
  itemTransaksi   ItemTransaksi[] // Relasi ke ItemTransaksi
}

model Transaksi {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  anggota         Anggota?        @relation(fields: [anggotaId], references: [id])
  anggotaId       String?         @db.ObjectId  // ID relasi ke Anggota (ObjectId)
  tanggalTransaksi DateTime       @default(now())
  itemTransaksi   ItemTransaksi[] // Relasi ke ItemTransaksi
}

model ItemTransaksi {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  transaksi       Transaksi?      @relation(fields: [transaksiId], references: [id])
  transaksiId     String?         @db.ObjectId // ID relasi ke Transaksi
  itemSampah      ItemSampah?     @relation(fields: [itemSampahId], references: [id])
  itemSampahId    String?         @db.ObjectId // ID relasi ke ItemSampah
  kuantitas       Float           // Jumlah dalam kg
  totalHarga      Float           // Harga total
}
